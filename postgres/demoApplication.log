[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@1aafa419
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@1aafa419
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1aafa419
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@55182842
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5656be13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@14cd1699
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4802796d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@4802796d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4802796d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bb5a082
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bb5a082
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb5a082
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@33d512c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@33d512c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33d512c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@765d7657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@765d7657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@765d7657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e0e82ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e0e82ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e0e82ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@2b71e916
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@2b71e916
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b71e916
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@62379589
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@62379589
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62379589
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@776aec5c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@776aec5c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@408d971b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@408d971b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@292b08d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@292b08d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45752059
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@54d9d12d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@40a4337a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40a4337a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@327514f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@327514f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3eb25e1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3eb25e1a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb738bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eb738bb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@9d5509a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@9d5509a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7eac9008
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7eac9008
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a677343
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a677343
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c6908d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c6908d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fbd1f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@fbd1f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@3a52dba3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a52dba3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@61322f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@61322f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@61322f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7817fd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@fa4c865
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fa4c865
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fa4c865
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@247bddad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@7d20d0b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d20d0b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@131ef10
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@131ef10
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70325e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70325e14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@2002fc1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2002fc1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7dc0f706
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7dc0f706
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1e66f1f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@394df057
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@394df057
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@394df057
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75db5df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75db5df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75db5df9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@291caca8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1f59a598
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f59a598
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26b3fd41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5c671d7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5c671d7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@3af9c5b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3af9c5b7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c309d4d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6ab778a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@38e79ae3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@15ca7889
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15ca7889
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e509ffa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2898ac89
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@683dbc2c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68267da0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2638011
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6ff29830
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a2b953e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@313b2ea6
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@63eef88a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@63eef88a
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7dc0f706
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@258d79be] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f9390f]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:/Users/Mandakini/program/eclipse/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/409/0/.cp:/Users/Mandakini/program/eclipse/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/408/0/.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 54232 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.de.groceryplanner.daoimpltest.ProductDaoImplTest:testFindProductByBarcode, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@388ba540, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@258d79be] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c260bdc]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@169da7f2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d39a69]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c383e33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367795c7]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cd7f1ae]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3569edd5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0332e1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c827db]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430fa4ef]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22df874e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f2c488] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d7cc3cb
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: b885ae0c-a319-4467-bb58-415665e798c7 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2abc224d
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'de'
    |  |     |  |  |  \-[IDENT] Node: 'groceryplanner'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'ProductDto'
    |  |     \-[ALIAS] Node: '_Product'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: '_Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'PRODUCT_BARCODE'
          \-[QUOTED_STRING] Node: ''123455''

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.de.groceryplanner.dto.ProductDto (_Product) -> productdto0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : _Product -> productdto0_.PRODUCT_ID
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} productdto0_.PRODUCT_ID ) ( FromClause{level=1} PRODUCT productdto0_ ) ( where ( = PRODUCT_BARCODE '123455' ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [PRODUCT productdto0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PRODUCT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'productdto0_.PRODUCT_ID as PRODUCT_1_1_' {alias=_Product, className=com.de.groceryplanner.dto.ProductDto, tableAlias=productdto0_}
    |  \-[SQL_TOKEN] SqlFragment: 'productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[_Product], fromElementByTableAlias=[productdto0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PRODUCT productdto0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=_Product,role=null,tableName=PRODUCT,tableAlias=productdto0_,origin=null,columns={,className=com.de.groceryplanner.dto.ProductDto}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'PRODUCT_BARCODE' {originalText=PRODUCT_BARCODE}
          \-[QUOTED_STRING] LiteralNode: ''123455''

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.SQL  - select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.CategoryDto#8
[main] DEBUG org.hibernate.SQL  - select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.StoreDto#9
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@76508ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d74bf60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2145b572
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@393671df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@393671df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@192d43ce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@192d43ce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@43195e57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@43195e57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40ef3420
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@402bba4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@dbf57b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dbf57b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1d9b7cce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d9b7cce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2e005c4b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2e005c4b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@359f7cdf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@359f7cdf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b927fb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b927fb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b9a4292
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b9a4292
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d48005
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d48005
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5876a9af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5876a9af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@595b007d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@595b007d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@3a93b025
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a93b025
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@564fabc8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@564fabc8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74fe5c40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b662a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@6adbc9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6adbc9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@9597028
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9597028
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77fbd92c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77fbd92c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@2f9f7dcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f9f7dcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@130d63be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@35d019a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@799f10e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6f1de4c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@7cc0cdad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7b2bbc3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b2bbc3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47eaca72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@76505305
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76505305
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@34123d65
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34123d65
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e694b3f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41d477ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@443118b0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@3754a4bf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3754a4bf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@175c2241
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5bf0d49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b7a5baa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@776aec5c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d296da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c7a06ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75d4a5c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@557caf28
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7a3793c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7a3793c7
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a00d9cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6736fa8d]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/System/Library/Java/Extensions/MRJToolkit.jar:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=com.de.hibernate.launcher.GroceryAppLauncher, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4189d70b, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a00d9cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a8a64e]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bae47a0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6650813a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22175d4f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f4b1a6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d52e3ef]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e406694]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f10035]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b50150]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b530eb9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678040b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1500e009] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39ce27f2
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: a38c8006-bb1e-4a5d-b88d-508b00ae103b (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5173200b
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'de'
    |  |     |  |  |  \-[IDENT] Node: 'groceryplanner'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'ProductDto'
    |  |     \-[ALIAS] Node: '_Product'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: '_Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'PRODUCT_BARCODE'
          \-[QUOTED_STRING] Node: ''123455''

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.de.groceryplanner.dto.ProductDto (_Product) -> productdto0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : _Product -> productdto0_.PRODUCT_ID
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} productdto0_.PRODUCT_ID ) ( FromClause{level=1} PRODUCT productdto0_ ) ( where ( = PRODUCT_BARCODE '123455' ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [PRODUCT productdto0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PRODUCT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'productdto0_.PRODUCT_ID as PRODUCT_1_1_' {alias=_Product, className=com.de.groceryplanner.dto.ProductDto, tableAlias=productdto0_}
    |  \-[SQL_TOKEN] SqlFragment: 'productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[_Product], fromElementByTableAlias=[productdto0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PRODUCT productdto0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=_Product,role=null,tableName=PRODUCT,tableAlias=productdto0_,origin=null,columns={,className=com.de.groceryplanner.dto.ProductDto}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'PRODUCT_BARCODE' {originalText=PRODUCT_BARCODE}
          \-[QUOTED_STRING] LiteralNode: ''123455''

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.SQL  - select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.CategoryDto#8
[main] DEBUG org.hibernate.SQL  - select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.StoreDto#9
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] WARN  org.hibernate.orm.deprecation  - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
[main] DEBUG org.hibernate.SQL  - select this_.PRODUCT_ID as PRODUCT_1_1_2_, this_.PRODUCT_BARCODE as PRODUCT_2_1_2_, this_.PRODUC_TNAME as PRODUC_T3_1_2_, this_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, this_.productCategory_CATEGORY_ID as productC5_1_2_, this_.storeName_STORE_ID as storeNam6_1_2_, categorydt2_.CATEGORY_ID as CATEGORY1_0_0_, categorydt2_.name as name2_0_0_, storedto3_.STORE_ID as STORE_ID1_2_1_, storedto3_.STORE_NAME as STORE_NA2_2_1_, storedto3_.STORE_WEBLINK as STORE_WE3_2_1_, storedto3_.storetype as storetyp4_2_1_ from PRODUCT this_ left outer join CATEGORY categorydt2_ on this_.productCategory_CATEGORY_ID=categorydt2_.CATEGORY_ID left outer join STORE storedto3_ on this_.storeName_STORE_ID=storedto3_.STORE_ID
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#8], EntityKey[com.de.groceryplanner.dto.StoreDto#9], EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#11], EntityKey[com.de.groceryplanner.dto.StoreDto#12], EntityKey[com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#14], EntityKey[com.de.groceryplanner.dto.StoreDto#15], EntityKey[com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 3
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#17], EntityKey[com.de.groceryplanner.dto.StoreDto#18], EntityKey[com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 4
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#20], EntityKey[com.de.groceryplanner.dto.StoreDto#21], EntityKey[com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=16, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#18, barCode=123458, productCategory=com.de.groceryplanner.dto.CategoryDto#17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=19, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#21, barCode=123459, productCategory=com.de.groceryplanner.dto.CategoryDto#20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=10, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#12, barCode=123456, productCategory=com.de.groceryplanner.dto.CategoryDto#11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=15, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=12, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=13, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#15, barCode=123457, productCategory=com.de.groceryplanner.dto.CategoryDto#14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=21, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=18, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[pool-1-thread-1] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ff4931d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ad82709
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@8297b3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e66f1f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58a9760d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e96bacf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60015ef5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36d585c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f67eb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@78ffe6dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@152aa092
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@776b83cc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3541cb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3972a855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a370f4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@140c9f39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e6ef8ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@346d61be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55536d9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@747edf66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d1cfad4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62230c58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cd2a21f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e55dd0c
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12359a82]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter2985097996530962064.jar /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire132166412328051342tmp /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire_02862618098683892187tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, surefire.test.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, basedir=/Users/Mandakini/git/GroceryPlanner/postgres, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter2985097996530962064.jar, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, localRepository=/Users/Mandakini/.m2/repository, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2756c0a7, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@533377b]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a7abe1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3935e9a8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fae4d4a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffc5491]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd55d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0b9178]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f63c44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5b5ca4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b04acb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b6ac111] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@732bb66d
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: cb53552d-4715-433b-81ea-276064a5d9c0 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.ProductDto#5
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] WARN  org.hibernate.orm.deprecation  - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
[main] DEBUG org.hibernate.SQL  - select this_.PRODUCT_ID as PRODUCT_1_1_2_, this_.PRODUCT_BARCODE as PRODUCT_2_1_2_, this_.PRODUC_TNAME as PRODUC_T3_1_2_, this_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, this_.productCategory_CATEGORY_ID as productC5_1_2_, this_.storeName_STORE_ID as storeNam6_1_2_, categorydt2_.CATEGORY_ID as CATEGORY1_0_0_, categorydt2_.name as name2_0_0_, storedto3_.STORE_ID as STORE_ID1_2_1_, storedto3_.STORE_NAME as STORE_NA2_2_1_, storedto3_.STORE_WEBLINK as STORE_WE3_2_1_, storedto3_.storetype as storetyp4_2_1_ from PRODUCT this_ left outer join CATEGORY categorydt2_ on this_.productCategory_CATEGORY_ID=categorydt2_.CATEGORY_ID left outer join STORE storedto3_ on this_.storeName_STORE_ID=storedto3_.STORE_ID
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#8], EntityKey[com.de.groceryplanner.dto.StoreDto#9], EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#11], EntityKey[com.de.groceryplanner.dto.StoreDto#12], EntityKey[com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#14], EntityKey[com.de.groceryplanner.dto.StoreDto#15], EntityKey[com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 3
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#17], EntityKey[com.de.groceryplanner.dto.StoreDto#18], EntityKey[com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 4
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#20], EntityKey[com.de.groceryplanner.dto.StoreDto#21], EntityKey[com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=16, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#18, barCode=123458, productCategory=com.de.groceryplanner.dto.CategoryDto#17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=19, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#21, barCode=123459, productCategory=com.de.groceryplanner.dto.CategoryDto#20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=10, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#12, barCode=123456, productCategory=com.de.groceryplanner.dto.CategoryDto#11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=15, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=12, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=13, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#15, barCode=123457, productCategory=com.de.groceryplanner.dto.CategoryDto#14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=21, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=18, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c7cfcbb
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'de'
    |  |     |  |  |  \-[IDENT] Node: 'groceryplanner'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'ProductDto'
    |  |     \-[ALIAS] Node: '_Product'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: '_Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'PRODUCT_BARCODE'
          \-[QUOTED_STRING] Node: ''123455''

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.de.groceryplanner.dto.ProductDto (_Product) -> productdto0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : _Product -> productdto0_.PRODUCT_ID
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} productdto0_.PRODUCT_ID ) ( FromClause{level=1} PRODUCT productdto0_ ) ( where ( = PRODUCT_BARCODE '123455' ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [PRODUCT productdto0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PRODUCT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'productdto0_.PRODUCT_ID as PRODUCT_1_1_' {alias=_Product, className=com.de.groceryplanner.dto.ProductDto, tableAlias=productdto0_}
    |  \-[SQL_TOKEN] SqlFragment: 'productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[_Product], fromElementByTableAlias=[productdto0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PRODUCT productdto0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=_Product,role=null,tableName=PRODUCT,tableAlias=productdto0_,origin=null,columns={,className=com.de.groceryplanner.dto.ProductDto}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'PRODUCT_BARCODE' {originalText=PRODUCT_BARCODE}
          \-[QUOTED_STRING] LiteralNode: ''123455''

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.SQL  - select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.CategoryDto#8
[main] DEBUG org.hibernate.SQL  - select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.StoreDto#9
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ff4931d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ad82709
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@8297b3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e66f1f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58a9760d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e96bacf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60015ef5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36d585c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f67eb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@78ffe6dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@152aa092
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@776b83cc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3541cb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3972a855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a370f4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@140c9f39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e6ef8ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@346d61be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55536d9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@747edf66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d1cfad4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62230c58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cd2a21f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e55dd0c
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12359a82]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter624913086144185358.jar /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire7642972862619654647tmp /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire_04449392569810100424tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, surefire.test.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, basedir=/Users/Mandakini/git/GroceryPlanner/postgres, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter624913086144185358.jar, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, localRepository=/Users/Mandakini/.m2/repository, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2756c0a7, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@533377b]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a7abe1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3935e9a8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fae4d4a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffc5491]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd55d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0b9178]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f63c44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5b5ca4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b04acb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b6ac111] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@732bb66d
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 6431df24-4c6f-40c6-be6a-c6852697fa9e (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.ProductDto#5
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] WARN  org.hibernate.orm.deprecation  - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
[main] DEBUG org.hibernate.SQL  - select this_.PRODUCT_ID as PRODUCT_1_1_2_, this_.PRODUCT_BARCODE as PRODUCT_2_1_2_, this_.PRODUC_TNAME as PRODUC_T3_1_2_, this_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, this_.productCategory_CATEGORY_ID as productC5_1_2_, this_.storeName_STORE_ID as storeNam6_1_2_, categorydt2_.CATEGORY_ID as CATEGORY1_0_0_, categorydt2_.name as name2_0_0_, storedto3_.STORE_ID as STORE_ID1_2_1_, storedto3_.STORE_NAME as STORE_NA2_2_1_, storedto3_.STORE_WEBLINK as STORE_WE3_2_1_, storedto3_.storetype as storetyp4_2_1_ from PRODUCT this_ left outer join CATEGORY categorydt2_ on this_.productCategory_CATEGORY_ID=categorydt2_.CATEGORY_ID left outer join STORE storedto3_ on this_.storeName_STORE_ID=storedto3_.STORE_ID
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#8], EntityKey[com.de.groceryplanner.dto.StoreDto#9], EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#11], EntityKey[com.de.groceryplanner.dto.StoreDto#12], EntityKey[com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#14], EntityKey[com.de.groceryplanner.dto.StoreDto#15], EntityKey[com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 3
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#17], EntityKey[com.de.groceryplanner.dto.StoreDto#18], EntityKey[com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 4
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#20], EntityKey[com.de.groceryplanner.dto.StoreDto#21], EntityKey[com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=16, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#18, barCode=123458, productCategory=com.de.groceryplanner.dto.CategoryDto#17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=19, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#21, barCode=123459, productCategory=com.de.groceryplanner.dto.CategoryDto#20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=10, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#12, barCode=123456, productCategory=com.de.groceryplanner.dto.CategoryDto#11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=15, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=12, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=13, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#15, barCode=123457, productCategory=com.de.groceryplanner.dto.CategoryDto#14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=21, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=18, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c7cfcbb
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'de'
    |  |     |  |  |  \-[IDENT] Node: 'groceryplanner'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'ProductDto'
    |  |     \-[ALIAS] Node: '_Product'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: '_Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'PRODUCT_BARCODE'
          \-[QUOTED_STRING] Node: ''123455''

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.de.groceryplanner.dto.ProductDto (_Product) -> productdto0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : _Product -> productdto0_.PRODUCT_ID
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} productdto0_.PRODUCT_ID ) ( FromClause{level=1} PRODUCT productdto0_ ) ( where ( = PRODUCT_BARCODE '123455' ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [PRODUCT productdto0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PRODUCT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'productdto0_.PRODUCT_ID as PRODUCT_1_1_' {alias=_Product, className=com.de.groceryplanner.dto.ProductDto, tableAlias=productdto0_}
    |  \-[SQL_TOKEN] SqlFragment: 'productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[_Product], fromElementByTableAlias=[productdto0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PRODUCT productdto0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=_Product,role=null,tableName=PRODUCT,tableAlias=productdto0_,origin=null,columns={,className=com.de.groceryplanner.dto.ProductDto}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'PRODUCT_BARCODE' {originalText=PRODUCT_BARCODE}
          \-[QUOTED_STRING] LiteralNode: ''123455''

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.SQL  - select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.CategoryDto#8
[main] DEBUG org.hibernate.SQL  - select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.StoreDto#9
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45c7e403
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ff4931d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ad82709
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@8297b3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3bd82cf5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e5d171f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c40365c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2df3b89c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@20d525
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ae13544
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@587e5365
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c0c2f8d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@609cd4d8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c3d9b6b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e66f1f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58a9760d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d09a04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6a2f6f80
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ed7f8b4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e3958e7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f45df59
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d2ffcb7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@117e949d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c0be339
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@610f7aa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68567e20
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c1e2a9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b4bac49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e96bacf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740773a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60015ef5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@568ff82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d8bd0de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@574b560f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@157853da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36d585c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@609db43b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6497b078
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f67eb2a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@78ffe6dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@6c779568
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61d6015a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@152aa092
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@776b83cc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5939a379
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3541cb24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3315d2d7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1649b0e6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3972a855
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a370f4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@140c9f39
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34f7cfd9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e6ef8ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@346d61be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55536d9e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@747edf66
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d1cfad4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62230c58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cd2a21f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e55dd0c
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6c4980d3
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@dd0c991
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12359a82]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter1949006980546890068.jar /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire8145255301223976257tmp /Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefire_08727923847879203375tmp, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, surefire.test.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/test-classes:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar:, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, basedir=/Users/Mandakini/git/GroceryPlanner/postgres, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, surefire.real.class.path=/Users/Mandakini/git/GroceryPlanner/postgres/target/surefire/surefirebooter1949006980546890068.jar, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, localRepository=/Users/Mandakini/.m2/repository, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2756c0a7, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e6104fc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@533377b]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a7abe1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3935e9a8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f8b57]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fae4d4a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ffc5491]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd55d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e0b9178]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f63c44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f5b5ca4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b04acb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b6ac111] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@732bb66d
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 92076bfe-8463-4548-a689-9725c3e4f827 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.ProductDto#5
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] WARN  org.hibernate.orm.deprecation  - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
[main] DEBUG org.hibernate.SQL  - select this_.PRODUCT_ID as PRODUCT_1_1_2_, this_.PRODUCT_BARCODE as PRODUCT_2_1_2_, this_.PRODUC_TNAME as PRODUC_T3_1_2_, this_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, this_.productCategory_CATEGORY_ID as productC5_1_2_, this_.storeName_STORE_ID as storeNam6_1_2_, categorydt2_.CATEGORY_ID as CATEGORY1_0_0_, categorydt2_.name as name2_0_0_, storedto3_.STORE_ID as STORE_ID1_2_1_, storedto3_.STORE_NAME as STORE_NA2_2_1_, storedto3_.STORE_WEBLINK as STORE_WE3_2_1_, storedto3_.storetype as storetyp4_2_1_ from PRODUCT this_ left outer join CATEGORY categorydt2_ on this_.productCategory_CATEGORY_ID=categorydt2_.CATEGORY_ID left outer join STORE storedto3_ on this_.storeName_STORE_ID=storedto3_.STORE_ID
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#8], EntityKey[com.de.groceryplanner.dto.StoreDto#9], EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#11], EntityKey[com.de.groceryplanner.dto.StoreDto#12], EntityKey[com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#14], EntityKey[com.de.groceryplanner.dto.StoreDto#15], EntityKey[com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 3
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#17], EntityKey[com.de.groceryplanner.dto.StoreDto#18], EntityKey[com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 4
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.CategoryDto#20], EntityKey[com.de.groceryplanner.dto.StoreDto#21], EntityKey[com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#11]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#12]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#10]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#14]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#15]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#13]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#17]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#18]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#16]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#20]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#21]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#19]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=16, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#18, barCode=123458, productCategory=com.de.groceryplanner.dto.CategoryDto#17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=17}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=19, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#21, barCode=123459, productCategory=com.de.groceryplanner.dto.CategoryDto#20}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=10, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#12, barCode=123456, productCategory=com.de.groceryplanner.dto.CategoryDto#11}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=15, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=12, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=13, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#15, barCode=123457, productCategory=com.de.groceryplanner.dto.CategoryDto#14}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=21, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=18, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c7cfcbb
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'de'
    |  |     |  |  |  \-[IDENT] Node: 'groceryplanner'
    |  |     |  |  \-[IDENT] Node: 'dto'
    |  |     |  \-[IDENT] Node: 'ProductDto'
    |  |     \-[ALIAS] Node: '_Product'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: '_Product'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'PRODUCT_BARCODE'
          \-[QUOTED_STRING] Node: ''123455''

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.de.groceryplanner.dto.ProductDto (_Product) -> productdto0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : _Product -> productdto0_.PRODUCT_ID
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} productdto0_.PRODUCT_ID ) ( FromClause{level=1} PRODUCT productdto0_ ) ( where ( = PRODUCT_BARCODE '123455' ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [PRODUCT productdto0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PRODUCT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'productdto0_.PRODUCT_ID as PRODUCT_1_1_' {alias=_Product, className=com.de.groceryplanner.dto.ProductDto, tableAlias=productdto0_}
    |  \-[SQL_TOKEN] SqlFragment: 'productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[_Product], fromElementByTableAlias=[productdto0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'PRODUCT productdto0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=_Product,role=null,tableName=PRODUCT,tableAlias=productdto0_,origin=null,columns={,className=com.de.groceryplanner.dto.ProductDto}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'PRODUCT_BARCODE' {originalText=PRODUCT_BARCODE}
          \-[QUOTED_STRING] LiteralNode: ''123455''

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select _Product from com.de.groceryplanner.dto.ProductDto _Product where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select productdto0_.PRODUCT_ID as PRODUCT_1_1_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto0_.productCategory_CATEGORY_ID as productC5_1_, productdto0_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto0_ where PRODUCT_BARCODE='123455'
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.SQL  - select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.CategoryDto#8]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.CategoryDto#8
[main] DEBUG org.hibernate.SQL  - select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.StoreDto#9]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.de.groceryplanner.dto.StoreDto#9
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.de.groceryplanner.dto.ProductDto#7]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=7, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#9, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=8}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=9, storeLink=https://www}
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.3.6.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[main] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[main] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3911c2a7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@76508ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d74bf60
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2145b572
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1cbbffcd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28eaa59a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35ef1869
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@708f5957
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@291ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@188715b5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20deea7f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@393671df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@393671df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@192d43ce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@192d43ce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@43195e57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@43195e57
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@40ef3420
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@402bba4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@dbf57b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@dbf57b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1d9b7cce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1d9b7cce
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@2e005c4b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2e005c4b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@359f7cdf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@359f7cdf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b927fb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b927fb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b9a4292
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b9a4292
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d48005
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67d48005
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5876a9af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5876a9af
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@595b007d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@595b007d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@3a93b025
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a93b025
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@564fabc8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@564fabc8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@223d2c72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@74fe5c40
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77847718
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b662a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@6adbc9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6adbc9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@9597028
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@9597028
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77fbd92c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77fbd92c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@2f9f7dcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f9f7dcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@130d63be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@74f0ea28
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38d8f54a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@35d019a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@799f10e1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@4562e04d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34a3d150
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@6f1de4c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@7cc0cdad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7b2bbc3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7b2bbc3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47eaca72
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@76505305
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76505305
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@34123d65
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@34123d65
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e694b3f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41d477ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@443118b0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@3754a4bf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3754a4bf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@175c2241
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5bf0d49
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b7a5baa
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@776aec5c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d296da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c7a06ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75d4a5c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@557caf28
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {user=postgres, password=sks4kor}
[main] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20 (min=1)
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : PostgreSQL
    version : 9.5.14
      major : 9
      minor : 5
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.2.jre7
      major : 42
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl  - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7a3793c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@7a3793c7
[main] INFO  org.hibernate.type.BasicTypeRegistry  - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f83df68
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a00d9cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6736fa8d]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name ProductDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.ProductDto on table PRODUCT
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:productId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productId
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(PRODUCT_ID)]), productId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_BARCODE, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property barCode with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:barCode]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property barCode
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUC_TNAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=PRODUCT_QUANTITY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property numberOfItems with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.ProductDto:numberOfItems]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property numberOfItems
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=productCategory, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productCategory
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PRODUCT), mappingColumn=storeName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeName
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name StoreDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.StoreDto on table STORE
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(STORE_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_NAME, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=STORE_WEBLINK, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storeLink with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storeLink]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storeLink
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STORE), mappingColumn=storetype, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property storetype with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.StoreDto:storetype]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property storetype
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CategoryDto
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.de.groceryplanner.dto.CategoryDto on table CATEGORY
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=CATEGORY_ID, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(CATEGORY_ID)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CATEGORY), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.de.groceryplanner.dto.CategoryDto:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for barCode
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for numberOfItems
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storeLink
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for storetype
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [store_id] to be non-null as it is part of the primary key for table [store]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : 
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : 
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/System/Library/Java/Extensions/MRJToolkit.jar:/Users/Mandakini/git/GroceryPlanner/postgres/target/classes:/Users/Mandakini/.m2/repository/org/hibernate/hibernate-core/5.3.6.Final/hibernate-core-5.3.6.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/Mandakini/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/Mandakini/.m2/repository/org/javassist/javassist/3.23.1-GA/javassist-3.23.1-GA.jar:/Users/Mandakini/.m2/repository/net/bytebuddy/byte-buddy/1.8.17/byte-buddy-1.8.17.jar:/Users/Mandakini/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/Mandakini/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/Mandakini/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/Mandakini/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/Mandakini/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/Mandakini/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/Mandakini/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.4.Final/hibernate-commons-annotations-5.0.4.Final.jar:/Users/Mandakini/.m2/repository/org/postgresql/postgresql/42.2.2.jre7/postgresql-42.2.2.jre7.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-log4j12/1.4.2/slf4j-log4j12-1.4.2.jar:/Users/Mandakini/.m2/repository/org/slf4j/slf4j-api/1.4.2/slf4j-api-1.4.2.jar:/Users/Mandakini/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar:/Users/Mandakini/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/Mandakini/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/Mandakini/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Mac OS X, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib, sun.java.command=com.de.hibernate.launcher.AppMain, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, sun.cpu.endian=little, user.home=/Users/Mandakini, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_181-b13, user.name=Mandakini, path.separator=:, hibernate.connection.username=****, os.version=10.13.6, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=org.hibernate.context.internal.ThreadLocalSessionContext, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/50/mldp744100xcw9vpz53n6h680000gn/T/, java.version=1.8.0_181, user.dir=/Users/Mandakini/git/GroceryPlanner/postgres, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4189d70b, java.library.path=/Users/Mandakini/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/Users/Mandakini/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.io.unicode.encoding=UnicodeBig, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a00d9cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20a8a64e]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.StoreDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.ProductDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.de.groceryplanner.dto.CategoryDto] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.StoreDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select STORE_ID from STORE where STORE_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select storedto_.STORE_ID, storedto_.STORE_NAME as STORE_NA2_2_, storedto_.STORE_WEBLINK as STORE_WE3_2_, storedto_.storetype as storetyp4_2_ from STORE storedto_ where storedto_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update STORE set STORE_NAME=?, STORE_WEBLINK=?, storetype=? where STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from STORE where STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bae47a0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [NONE]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6650813a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.StoreDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.StoreDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.StoreDto)
          - SQL table alias mapping - storedto0_
          - alias suffix - 0_
          - suffixed key columns - {STORE_ID1_2_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.StoreDto [READ]: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.StoreDto: select storedto0_.STORE_ID as STORE_ID1_2_0_, storedto0_.STORE_NAME as STORE_NA2_2_0_, storedto0_.STORE_WEBLINK as STORE_WE3_2_0_, storedto0_.storetype as storetyp4_2_0_ from STORE storedto0_ where storedto0_.STORE_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.ProductDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select PRODUCT_ID from PRODUCT where PRODUCT_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select productdto_.PRODUCT_ID, productdto_.PRODUCT_BARCODE as PRODUCT_2_1_, productdto_.PRODUC_TNAME as PRODUC_T3_1_, productdto_.PRODUCT_QUANTITY as PRODUCT_4_1_, productdto_.productCategory_CATEGORY_ID as productC5_1_, productdto_.storeName_STORE_ID as storeNam6_1_ from PRODUCT productdto_ where productdto_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update PRODUCT set PRODUCT_BARCODE=?, PRODUC_TNAME=?, PRODUCT_QUANTITY=?, productCategory_CATEGORY_ID=?, storeName_STORE_ID=? where PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from PRODUCT where PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22175d4f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f4b1a6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d52e3ef]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [NONE]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e406694]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : barCode
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : numberOfItems
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f10035]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productCategory.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b50150]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storeLink
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : storeName.storetype
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.ProductDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.ProductDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.ProductDto)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:1>, path=com.de.groceryplanner.dto.ProductDto.productCategory)
          - EntityAttributeFetchImpl(entity=com.de.groceryplanner.dto.StoreDto, querySpaceUid=<gen:2>, path=com.de.groceryplanner.dto.ProductDto.storeName)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.ProductDto)
          - SQL table alias mapping - productdto0_
          - alias suffix - 0_
          - suffixed key columns - {PRODUCT_1_1_0_}
          - JOIN (JoinDefinedByMetadata(productCategory)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.de.groceryplanner.dto.CategoryDto)
                - SQL table alias mapping - categorydt1_
                - alias suffix - 1_
                - suffixed key columns - {CATEGORY1_0_1_}
          - JOIN (JoinDefinedByMetadata(storeName)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.de.groceryplanner.dto.StoreDto)
                - SQL table alias mapping - storedto2_
                - alias suffix - 2_
                - suffixed key columns - {STORE_ID1_2_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.ProductDto [READ]: select productdto0_.PRODUCT_ID as PRODUCT_1_1_0_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_0_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_0_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_0_, productdto0_.productCategory_CATEGORY_ID as productC5_1_0_, productdto0_.storeName_STORE_ID as storeNam6_1_0_, categorydt1_.CATEGORY_ID as CATEGORY1_0_1_, categorydt1_.name as name2_0_1_, storedto2_.STORE_ID as STORE_ID1_2_2_, storedto2_.STORE_NAME as STORE_NA2_2_2_, storedto2_.STORE_WEBLINK as STORE_WE3_2_2_, storedto2_.storetype as storetyp4_2_2_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.ProductDto: select productdto0_.PRODUCT_ID as PRODUCT_1_1_2_, productdto0_.PRODUCT_BARCODE as PRODUCT_2_1_2_, productdto0_.PRODUC_TNAME as PRODUC_T3_1_2_, productdto0_.PRODUCT_QUANTITY as PRODUCT_4_1_2_, productdto0_.productCategory_CATEGORY_ID as productC5_1_2_, productdto0_.storeName_STORE_ID as storeNam6_1_2_, categorydt1_.CATEGORY_ID as CATEGORY1_0_0_, categorydt1_.name as name2_0_0_, storedto2_.STORE_ID as STORE_ID1_2_1_, storedto2_.STORE_NAME as STORE_NA2_2_1_, storedto2_.STORE_WEBLINK as STORE_WE3_2_1_, storedto2_.storetype as storetyp4_2_1_ from PRODUCT productdto0_ left outer join CATEGORY categorydt1_ on productdto0_.productCategory_CATEGORY_ID=categorydt1_.CATEGORY_ID left outer join STORE storedto2_ on productdto0_.storeName_STORE_ID=storedto2_.STORE_ID where productdto0_.PRODUCT_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.de.groceryplanner.dto.CategoryDto
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select CATEGORY_ID from CATEGORY where CATEGORY_ID =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select categorydt_.CATEGORY_ID, categorydt_.name as name2_0_ from CATEGORY categorydt_ where categorydt_.CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update CATEGORY set name=? where CATEGORY_ID=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from CATEGORY where CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b530eb9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [NONE]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@678040b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.de.groceryplanner.dto.CategoryDto)
    - Returns
       - EntityReturnImpl(entity=com.de.groceryplanner.dto.CategoryDto, querySpaceUid=<gen:0>, path=com.de.groceryplanner.dto.CategoryDto)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.de.groceryplanner.dto.CategoryDto)
          - SQL table alias mapping - categorydt0_
          - alias suffix - 0_
          - suffixed key columns - {CATEGORY1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.de.groceryplanner.dto.CategoryDto [READ]: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.de.groceryplanner.dto.CategoryDto: select categorydt0_.CATEGORY_ID as CATEGORY1_0_0_, categorydt0_.name as name2_0_0_ from CATEGORY categorydt0_ where categorydt0_.CATEGORY_ID=?
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] DEBUG org.hibernate.type.EnumType  - Using NAMED-based conversion for Enum com.de.groceryplanner.dto.StoreType
[main] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1500e009] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : CATEGORY
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : PRODUCT
[main] DEBUG org.hibernate.mapping.Table  - No alter strings for table : STORE
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39ce27f2
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: b5c48fad-85fd-4d1c-a0b2-bc68b3aa5d02 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select nextval ('hibernate_sequence')
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 22
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 22, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - select nextval ('hibernate_sequence')
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 23
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 23, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - select nextval ('hibernate_sequence')
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 24
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 24, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 3 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.StoreDto{storetype=ONLINE, name=EDEKA, id=24, storeLink=https://www}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.ProductDto{productId=22, numberOfItems=4, name=Toothpaste, storeName=com.de.groceryplanner.dto.StoreDto#24, barCode=123455, productCategory=com.de.groceryplanner.dto.CategoryDto#23}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.de.groceryplanner.dto.CategoryDto{name=Daily, id=23}
[main] DEBUG org.hibernate.SQL  - insert into CATEGORY (name, CATEGORY_ID) values (?, ?)
[main] DEBUG org.hibernate.SQL  - insert into STORE (STORE_NAME, STORE_WEBLINK, storetype, STORE_ID) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into PRODUCT (PRODUCT_BARCODE, PRODUC_TNAME, PRODUCT_QUANTITY, productCategory_CATEGORY_ID, storeName_STORE_ID, PRODUCT_ID) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[pool-1-thread-1] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
